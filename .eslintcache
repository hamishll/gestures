[{"P:\\My Documents\\GitHub\\gestures\\src\\index.js":"1","P:\\My Documents\\GitHub\\gestures\\src\\App.js":"2","P:\\My Documents\\GitHub\\gestures\\src\\reportWebVitals.js":"3","P:\\My Documents\\GitHub\\gestures\\src\\Theme.js":"4","P:\\My Documents\\GitHub\\gestures\\src\\Data.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":4784,"mtime":1609693012795,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":336,"mtime":1609684962770,"results":"10","hashOfConfig":"7"},{"size":461,"mtime":1609692125281,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1fd12kg",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"P:\\My Documents\\GitHub\\gestures\\src\\index.js",[],["25","26"],"P:\\My Documents\\GitHub\\gestures\\src\\App.js",["27","28","29"],"import theme from './Theme'\nimport data from './Data'\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { Button } from '@material-ui/core';\nimport { ThemeProvider, makeStyles } from \"@material-ui/core/styles\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport { useState } from 'react';\nimport './App.css';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const filteredData = data;\n  const [query, setQuery] = useState(\"\");\n  const tags = [];\n\n  function retrieveRandom() {\n    console.log(\"Random called\");\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n    <div className=\"App\">\n    <Container className={classes.cardGrid} maxWidth=\"md\">\n      <header className=\"App-header\">\n        {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n        <h1>Romantic Idea Generator</h1>\n        <p>{data.length} ideas to bring some adventure to your relationship! </p>\n        <Grid container spacing={4} alignItems={\"center\"}>\n          <Box m={1}> \n            <Button variant=\"contained\" color=\"primary\" onClick={() => setQuery(\"him\")}>For him</Button>\n          </Box>\n          <Box m={1}> \n            <Button variant=\"contained\" color=\"primary\" onClick={() => setQuery(\"her\")}>Hor her</Button>\n          </Box>\n          <Box m={1}> \n            <Button variant=\"contained\" color=\"primary\" onClick={() => setQuery(\"gift\")}>Gifts</Button>\n          </Box>\n          <Box m={1}> \n            <Button variant=\"contained\" color=\"primary\" onClick={() => setQuery(\"date\")}>Date ideas</Button>\n          </Box>\n        </Grid>\n         _\n        <Grid container spacing={4} align>\n          <Box m={1}> \n            <Button variant=\"contained\" color=\"primary\" onClick={() => retrieveRandom()}>Gimme a random idea</Button>\n            </Box>\n        </Grid>\n      </header>\n\n      <Container maxWidth=\"md\">\n        \n      </Container>\n\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n\n            {data.filter(data => data.tags.includes(query)).map((filteredData, index) => (\n\n            // {filteredData && filteredData.map((poll) => (\n              <Grid item key={index} xs={12} sm={6} md={6}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image={\"https://source.unsplash.com/random/640x360/?sig=\"+index}\n                    title= {filteredData.title}\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {filteredData.title}  \n                    </Typography>\n                    <Typography>\n                      This is a media card. You can use this section to describe the content. \n                    </Typography>\n                  </CardContent>\n                  <Grid>\n                    <Chip label={filteredData.tags.split(',')[0]} variant=\"outlined\" />\n                    <Chip label={filteredData.tags.split(',')[1]} variant=\"outlined\" />\n                    <Chip label={filteredData.tags.split(',')[2]} variant=\"outlined\" />\n                    <Chip label={filteredData.tags.split(',')[3]} variant=\"outlined\" />\n                  </Grid>\n                  \n                  {/* <CardActions>\n                    <Button size=\"small\" color=\"primary\">\n                      View\n                    </Button>\n                    <Button size=\"small\" color=\"primary\">\n                      Edit\n                    </Button>\n                  </CardActions> */}\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      \n      </Container>\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","P:\\My Documents\\GitHub\\gestures\\src\\reportWebVitals.js",[],"P:\\My Documents\\GitHub\\gestures\\src\\Theme.js",["30"],"import { createMuiTheme } from '@material-ui/core/styles';\nimport { green, pink } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: pink[500],\n      light: pink[300],\n      dark: pink[900],\n    },\n    //secondary: {\n      //main: '#f44336',\n    //},\n  },\n});\n\nexport default theme;","P:\\My Documents\\GitHub\\gestures\\src\\Data.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":9,"column":8,"nodeType":"37","messageId":"38","endLine":9,"endColumn":19},{"ruleId":"35","severity":1,"message":"39","line":52,"column":9,"nodeType":"37","messageId":"38","endLine":52,"endColumn":21},{"ruleId":"35","severity":1,"message":"40","line":54,"column":9,"nodeType":"37","messageId":"38","endLine":54,"endColumn":13},{"ruleId":"35","severity":1,"message":"41","line":2,"column":10,"nodeType":"37","messageId":"38","endLine":2,"endColumn":15},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","'filteredData' is assigned a value but never used.","'tags' is assigned a value but never used.","'green' is defined but never used.","no-global-assign","no-unsafe-negation"]
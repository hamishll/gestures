{"version":3,"sources":["Theme.js","Data.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","pink","light","dark","data","title","description","tags","useStyles","makeStyles","icon","marginRight","spacing","heroContent","backgroundColor","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","App","classes","useState","query","setQuery","ThemeProvider","className","Container","maxWidth","length","Grid","container","alignItems","Box","m","Button","variant","color","onClick","align","console","log","filter","includes","map","filteredData","index","item","xs","sm","md","Card","CardMedia","image","CardContent","Typography","gutterBottom","component","Chip","label","split","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e14e3dd3.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nimport { green, pink } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: pink[500],\n      light: pink[300],\n      dark: pink[900],\n    },\n    //secondary: {\n      //main: '#f44336',\n    //},\n  },\n});\n\nexport default theme;","export const data = [\n  {\n    title: \"Go on a walk at sunset\",\n    description: \"None set\",\n    tags: \"him, her, date\"\n  },\n  {\n    title: \"Buy a customised diary\",\n    description: \"None set\",\n    tags: \"him, her, gift\"\n  },\n  {\n    title: \"Go on a spa break together\",\n    description: \"None set\",\n    tags: \"him, her, gift\"\n  },\n  {\n    title: \"Hide a cute note in their pocket\",\n    description: \"None set\",\n    tags: \"him, her\"\n  },\n]\n\nexport default data;","import theme from './Theme'\nimport data from './Data'\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { Button } from '@material-ui/core';\nimport { ThemeProvider, makeStyles } from \"@material-ui/core/styles\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport { useState } from 'react';\nimport './App.css';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const filteredData = data;\n  const [query, setQuery] = useState(\"\");\n  const tags = [];\n\n  function retrieveRandom() {\n    console.log(\"Random called\");\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n    <div className=\"App\">\n    <Container className={classes.cardGrid} maxWidth=\"md\">\n      <header className=\"App-header\">\n        {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n        <h1>Relationship Roulette</h1>\n        <p>{data.length} ideas to bring some adventure to your relationship! </p>\n        <Grid container spacing={4} alignItems={\"center\"}>\n          <Box m={1}> \n            <Button variant=\"contained\" color=\"primary\" onClick={() => setQuery(\"him\")}>For him</Button>\n          </Box>\n          <Box m={1}> \n            <Button variant=\"contained\" color=\"primary\" onClick={() => setQuery(\"her\")}>For her</Button>\n          </Box>\n          <Box m={1}> \n            <Button variant=\"contained\" color=\"primary\" onClick={() => setQuery(\"gift\")}>Gifts</Button>\n          </Box>\n          <Box m={1}> \n            <Button variant=\"contained\" color=\"primary\" onClick={() => setQuery(\"date\")}>Date ideas</Button>\n          </Box>\n        </Grid>\n         _\n        <Grid container spacing={4} align>\n          <Box m={1}> \n            <Button variant=\"contained\" color=\"primary\" onClick={() => retrieveRandom()}>Gimme a random idea</Button>\n            </Box>\n        </Grid>\n      </header>\n\n      <Container maxWidth=\"md\">\n        \n      </Container>\n\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n\n            {data.filter(data => data.tags.includes(query)).map((filteredData, index) => (\n\n            // {filteredData && filteredData.map((poll) => (\n              <Grid item key={index} xs={12} sm={6} md={6}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image={\"https://source.unsplash.com/random/640x360/?sig=\"+index}\n                    title= {filteredData.title}\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {filteredData.title}  \n                    </Typography>\n                    <Typography>\n                      Description goes here.\n                    </Typography>\n                  </CardContent>\n                  <Grid>\n                    <Chip label={filteredData.tags.split(',')[0]} variant=\"outlined\" />\n                    <Chip label={filteredData.tags.split(',')[1]} variant=\"outlined\" />\n                    <Chip label={filteredData.tags.split(',')[2]} variant=\"outlined\" />\n                    <Chip label={filteredData.tags.split(',')[3]} variant=\"outlined\" />\n                  </Grid>\n                  \n                  {/* <CardActions>\n                    <Button size=\"small\" color=\"primary\">\n                      View\n                    </Button>\n                    <Button size=\"small\" color=\"primary\">\n                      Edit\n                    </Button>\n                  </CardActions> */}\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      \n      </Container>\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}